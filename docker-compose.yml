services:
  smmm-website:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: smmm-website
    restart: unless-stopped
    depends_on:
      - admin-backend
    # Conecta este serviço à rede interna 'default' e à externa 'coolify'
    networks:
      - default
      - coolify
    healthcheck:  
      test: ["CMD", "curl", "-f", "http://localhost/"]  
      interval: 30s  
      timeout: 5s  
      retries: 3
      
  admin-backend:
    build:
      context: ./admin-backend
    container_name: admin-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - N8N_WEBHOOK_BASE_URL=${N8N_WEBHOOK_BASE_URL}
      - N8N_API_KEY=${N8N_API_KEY}
      - PORT=3000
    # Conecta este serviço à rede interna 'default' e à externa 'coolify'
    networks:
      - default
      - coolify
    healthcheck:  
      test: ["CMD", "curl", "-f", "http://localhost:3000/ || exit 1"]  
      interval: 30s  
      timeout: 5s  
      retries: 3
      
# Define as redes que nossos serviços usarão
networks:
  # A rede 'default' é criada automaticamente para este projeto
  default:
    driver: bridge
  # A rede 'coolify' já existe e é onde o Postgres está
  coolify:
    external: true